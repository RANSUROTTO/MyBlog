<#+
    // <copyright file="ServiceTemplate.tt" company="ransurotto.com">
    //  Copyright © Ransurotto. All Rights Reserved.
    // </copyright>

    public class ServiceTemplate : CSharpTemplate
    {

        private readonly T4ModelInfo _model;

        public ServiceTemplate(T4ModelInfo model){
            _model = model;
        }

        public override string TransformText()
        {
            //base.TransformText();
            var entityNamespace = _model.ModelType.Namespace;
            var currentNamespace = string.Format("Blog.Libraries.Services.{0}",_model.ModuleName);
            var interfaceName = string.Format("I{0}Service",_model.Name);
            var className = string.Format("{0}Service",_model.Name);
#>
using <#=entityNamespace#>;
using Blog.Libraries.Core.Data;
using Blog.Libraries.Services.Services;

namespace <#=currentNamespace#>
{
	public partial interface <#=interfaceName#> : IService<<#=_model.Name #>> {}

    public partial class <#=className#> : Service<<#=_model.Name #>>,<#=interfaceName#> 
    {
        
        #region Constructor

        public <#=className#> (IRepository<<#=_model.Name #>> repository) : base(repository) {}
        
        #endregion

    }

}
<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>
